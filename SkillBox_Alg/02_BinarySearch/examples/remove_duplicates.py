from typing import List


def remove_duplicates(array: List[int]) -> int:
    length = len(array)  # по умолчанию наш результат имеет исходную длину

    # Здесь мы будем использовать необычный цикл для обхода списка, ведь согласно нашему плану мы будем сами
    # решать когда нам пора двигаться дальше, а когда стоит рассмотреть текущий элемент еще раз.
    # Кстати, текущий элемент обозначим переменной
    i = 0

    # Мы будем идти циклом по нашему меняющемуся списоку до тех пор пока не достигнем его конца.
    while i < length:
        found = False
        for k in range(i+1, length):
            if array[k] == array[i]:
                found = True
                break

        # Что ж, если дубликата мы не нашли, можем смело двигаться дальше
        if not found:
            i += 1
            continue

        # А вот если мы его все же нашли, то пора заняться коррупционерствованием и украсть дублирующуюся
        # статью бюджета !

        # поочередно удаляем элементы, помните функцию которую мы рассматривали в начале урока?
        # Нам потребуется еще один точно такой же цикл начиная от следующего элемента и заканчивая концом списка
        for k in range(i+1, length):
            array[k - 1] = array[k]

        # длина нашего списка уменьшается на 1
        length -= 1

        # и еще не время двигаться дальше, потому что нам нужно снова рассмотреть новый i-ый элемент, так что i мы пока не меняем

    return length


if __name__ == '__main__':
    array = [15, 23, 20, 5, 15, 20, 15, 20]
    print("Original:", array)
    r = remove_duplicates(array)
    print("Unique:", array[:r])
